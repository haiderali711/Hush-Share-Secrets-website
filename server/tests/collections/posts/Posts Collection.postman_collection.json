{
  "info": {
    "_postman_id": "ffc9f861-b50e-4960-a9eb-b6c37ad9f7f5",
    "name": "Posts Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "localhost:3000/api/groups",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "27d4eae4-b3b2-4981-9cd8-f14e20b9f4d3",
            "exec": [
              "var jsonData = pm.response.json();",
              "var groupId = jsonData._id;",
              "pm.environment.set(\"group_id\", groupId);",
              "",
              "var getPostId = pm.variables.get(\"group_id\");",
              "",
              "pm.test(\"Status code is 201\", () => {",
              "    pm.response.to.have.status(201)",
              "})",
              "",
              "pm.test(\"Post has correct ID\", () => {",
              "    pm.expect(jsonData._id).to.eql(groupId);",
              "})",
              "",
              "pm.test(\"Body has correct data\", () => {",
              "    pm.expect(jsonData.name).to.eql(\"Some random group\");",
              "})",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"name\": \"Some random group\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:3000/api/groups",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "groups"]
        }
      },
      "response": []
    },
    {
      "name": "localhost:3000/api/users",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "0c364c8d-29e3-478b-9ab8-966a200dd93e",
            "exec": [
              "var jsonData = pm.response.json();",
              "var userId = jsonData._id;",
              "pm.environment.set(\"user_id\", userId);",
              "",
              "var getUserId = pm.variables.get(\"user_id\");",
              "var groupId = pm.variables.get(\"group_id\");",
              "",
              "pm.test(\"Status code is 201\", () => {",
              "    pm.response.to.have.status(201)",
              "})",
              "",
              "pm.test(\"Post has correct ID\", () => {",
              "    pm.expect(jsonData._id).to.eql(userId);",
              "})",
              "",
              "pm.test(\"Body has correct data\", () => {",
              "    pm.expect(jsonData.username).to.eql(\"gagan\");",
              "    pm.expect(jsonData.email).to.eql(\"gagan@gmail.com\");",
              "    pm.expect(jsonData.group).to.eql(groupId);",
              "})",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"username\": \"gagan\",\n\t\"email\": \"gagan@gmail.com\",\n\t\"group\": \"{{group_id}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:3000/api/users",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "users"]
        }
      },
      "response": []
    },
    {
      "name": "localhost:3000/api/posts/",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "27d4eae4-b3b2-4981-9cd8-f14e20b9f4d3",
            "exec": [
              "var jsonData = pm.response.json();",
              " postId = jsonData._id;",
              "pm.environment.set(\"post_id\", postId);",
              "",
              "var getPostId = pm.variables.get(\"post_id\");",
              "var userId = pm.variables.get(\"user_id\");",
              "var groupId = pm.variables.get(\"group_id\");",
              "",
              "pm.test(\"Status code is 201\", () => {",
              "    pm.response.to.have.status(201)",
              "})",
              "",
              "pm.test(\"Post has correct ID\", () => {",
              "    pm.expect(jsonData._id).to.eql(getPostId);",
              "})",
              "",
              "pm.test(\"Body has correct data\", () => {",
              "    pm.expect(jsonData.content).to.eql(\"This is a Post\");",
              "    pm.expect(jsonData.user).to.eql(userId);",
              "    pm.expect(jsonData.likes).to.eql(0);",
              "    pm.expect(jsonData.dislikes).to.eql(0);",
              "    pm.expect(jsonData.group).to.eql(groupId);",
              "})",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"content\": \"This is a Post\",\n\t\"user\": \"{{user_id}}\",\n\t\"group\": \"{{group_id}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:3000/api/posts",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "posts"]
        },
        "description": "Create a new Post"
      },
      "response": []
    },
    {
      "name": "localhost:3000/api/posts/",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9be96aea-2726-4896-b731-bf9103df00a4",
            "exec": [
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200)",
              "})",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/x-www-form-urlencoded",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": []
        },
        "url": {
          "raw": "localhost:3000/api/posts/",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "posts", ""]
        },
        "description": "Get all Posts"
      },
      "response": []
    },
    {
      "name": "localhost:3000/api/posts/{{post_id}}",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "9be96aea-2726-4896-b731-bf9103df00a4",
            "exec": [
              "var jsonData = pm.response.json();",
              "var getPostId = pm.variables.get(\"post_id\");",
              "var userId = pm.variables.get(\"user_id\");",
              "var groupId = pm.variables.get(\"group_id\");",
              "",
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200)",
              "})",
              "",
              "pm.test(\"Post has correct ID\", () => {",
              "    pm.expect(jsonData._id).to.eql(getPostId);",
              "})",
              "",
              "pm.test(\"Body has correct data\", () => {",
              "    pm.expect(jsonData.content).to.eql(\"This is a Post\");",
              "    pm.expect(jsonData.user._id).to.eql(userId);",
              "    pm.expect(jsonData.likes).to.eql(0);",
              "    pm.expect(jsonData.dislikes).to.eql(0);",
              "    pm.expect(jsonData.group).to.eql(groupId);",
              "})",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/x-www-form-urlencoded",
            "type": "text"
          }
        ],
        "body": {
          "mode": "urlencoded",
          "urlencoded": []
        },
        "url": {
          "raw": "localhost:3000/api/posts/{{post_id}}",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "posts", "{{post_id}}"]
        },
        "description": "Get Post with Id."
      },
      "response": []
    },
    {
      "name": "http://localhost:3000/api/posts/{{post_id}}",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "fa6aff6d-bd76-4124-8a28-b5b0e9b6bbc6",
            "exec": [
              "var jsonData = pm.response.json();",
              "",
              "var groupId = pm.variables.get(\"group_id\");",
              "",
              "pm.test(\"Status code is 200\", () => {",
              "    pm.response.to.have.status(200)",
              "})",
              "",
              "pm.test(\"Body has correct data\", () => {",
              "    pm.expect(jsonData.content).to.eql(\"Some random post.\");",
              "    pm.expect(jsonData.likes).to.eql(10);",
              "    pm.expect(jsonData.dislikes).to.eql(5);",
              "    pm.expect(jsonData.group).to.eql(groupId);",
              "})",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "name": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n\t\"content\": \"Some random post.\",\n\t\"likes\": 10,\n\t\"dislikes\": 5,\n\t\"category\": \"social\",\n\t\"group\": \"{{group_id}}\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "localhost:3000/api/posts/{{post_id}}",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "posts", "{{post_id}}"]
        }
      },
      "response": []
    },
    {
      "name": "localhost:3000/api/groups/{{post_id}}",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "32e7f35d-7c40-44cf-8fa3-43dd7cf49c62",
            "exec": [
              "var jsonData = pm.response.json();",
              "var statusCode = pm.response.code;",
              "",
              "pm.test(`Status code is ${statusCode}`, () => {",
              "    if (jsonData._id) pm.response.to.have.status(200);",
              "    else if (jsonData.error) pm.response.to.have.status(404);",
              "    else pm.response.to.have.status(500);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "localhost:3000/api/posts/{{post_id}}",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "posts", "{{post_id}}"]
        }
      },
      "response": []
    },
    {
      "name": "localhost:3000/api/posts",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "32e7f35d-7c40-44cf-8fa3-43dd7cf49c62",
            "exec": [
              "var jsonData = pm.response.json();",
              "var statusCode = pm.response.code;",
              "",
              "pm.test(`Status code is ${statusCode}`, () => {",
              "    if (jsonData.deletedCount >= 1) pm.response.to.have.status(200);",
              "    else if (jsonData.error) pm.response.to.have.status(404);",
              "    else pm.response.to.have.status(500);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "localhost:3000/api/posts",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "posts"]
        }
      },
      "response": []
    }
  ]
}
